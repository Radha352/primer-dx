---
title: Add <connection_name>  [Ensure Less than 45 characters, including spaces]
description: Learn how to integrate the Primer <connection_name> integration to your universal checkout [Ensure less than 155 characters, including spaces]
type: how_to
product: Universal Checkout
keyword_tag: payment method, <connection_name>, universal checkout 
---

<!---
1. Use this template as a guidance to author this topic. 
2. As the author, you have full creative license so please feel free to suggest improvements and we'll update this template for the benefit of all. 
3. The examples may lend some inspiration to your words. We'd really appreciate any additions to these examples.
4. If not using a suggested heading, comment it out for now. For example, nothing to say about Troubleshooting? Just comment out that section and we can use it when we're ready.
5. The markdown for tags are to be updated with Primer custom tags. Example: the {:.alert .alert-info} - Note tag has been added for illustration but may differ by Primer standards.
--->

Provide an introduction to this topic (no heading). This introduction should provide context to the reader, tell them what they are going to achieve. And how this task fits into the wider user journey.

If the user needs to understand this task with some conceptual information, link to that page. If the information fits in a single paragraph, include it on this page.

<!---
Examples of information to include:

- With Primer's <connection_name> integration, you can begin to accept payments across web, iOS, and Android _with any card processor_ in a few simple steps.

- <connection_name> is only supported on x devices and x browser. For more information, see the [connection_name support page](url_link)

- Visit the <connection_name> [Sample Data Page](link_url) to test and compare the integration with the x Playground environment.

- To enable Primer's <connection_name> integration, visit 'Connections' in the [Primer Dashboard](https://sandbox-dashboard.primer.io/login)
{:.alert .alert-info} - Note tag

- Learn more about the supported countries and currencies by visiting [<connection_name> Documentation](url_link).
--->

--------------------------------------------------------------------------------------------------------------------------------------
## Before you start
1. Mention all the pre-requisites to complete this task. 
Some examples are:
- Installing specific libraries, packages, or programming environments.
- Previous steps. If this task is preceded by a previous task, link to that task.

2. Mention information necessary for this task.
3. Use the {:.alert .alert-info} (Note) tag to call out important information.


Examples of what you could include:
- <connection_name> requires the following data to work. Ensure to pass them in the [client session](url_link):
  - `data_name_1`
  - `data_name_2`

- The <connection_name> vaulted token contains:
  - `name`: description

- The <connection_name> requires passing some information when creating a client session. Ensure that the following properties are provided:
  - `property name 1`
  - `property name 2`


-----------------------------------------------------------------------------------------------------------------------------------
## Select an SDK
This is the star of the show! 
- Break down larger tasks into sub-tasks, each with their own heading. [Headings can be setup to generate URLs and makes it easier for us to share information with our customers]
- If the task can be done in more than one way, mention steps under separate sub-headings. Ensure to elaborate this in an introduction.

Example flow of information for this topic:

The Primer <connection_name> integration has the following SDKs available:
- Web SDK - Universal Checkout
- Web SDK - Checkout Components
- iOS SDK
- iOS SDK - Saved payment method
- Android SDK
- Android SDK - Saved payment method
-  React Native SDK

To understand the difference between Universal Checkout, Checkout Components, and saved payment method, see [types of Primer SDKs ](url_link).

If you have already acquired customer information, follow the steps in the [pre-filling customer information](#pre-filling customer information) section on this page. If this means we start with that section, we will let them know here of the why and what.

To explore customization, see the [customization](#customization) section on this page. You could customize buttons and forms, useful for...


### Web SDK - Universal Checkout

#### Pre-requisites for Web SDK - Universal Checkout:
- Ensure to pass the following in the [client session] (link URL):
  - At least `name`: description
- In addition, pass `name`: description

To initialize the Web SDK - Universal Checkout, do the following:
1. Render <connection_name> by ensuring that ... [Example: the webpage is accessed through a secure `HTTPS` connection
   ```insert sample code here```

2. Customize the page using the following code as a sample. Provide more information on why and how: 
   ```insert sample code here```

-------------------------------------------------------------------------------------------------------------------------
## Pre-filling customer information
Give context and relevance to this topic. 

Example:
If you have already acquired customer information, use one of the following SDK's:

- Web SDK - Universal Checkout
- Web SDK - Checkout Components
- iOS SDK
- iOS SDK - Saved payment method
- Android SDK
- Android SDK - Saved payment method
-  React Native SDK
--------------------------------------------------------------------------------------------------------------------------------------------------------
## Customization 

Explore the customization available for your SDK.

### Web SDK
The following customizations are available for this SDK:

Example:
- Direct debit form
- Update of the `Submit button label` 

#### Customize the direct debit form
You can customize the Direct Debit form by using the `abc` option.
```insert sample code here```

#### Update the submit button label
You can update the submit button label by using `directDebit.submitButtonLabels`. Ensure that all translations are correctly specified, as in the following code sample:
```insert sample code here```



---------------------------------------------------------------------------------------------------------------------------------
## Troubleshooting
Here are some solutions to common errors:

### Error message 1
Solution:

Example:
- Ensure the following:
1. Enable x capability.
  <<insert image where possible. the alt: tag is for our visually impaired users. Ensure that the caption gives enough context to the user listening with a text-aloud tool >>
  <%= image_tag 'docs/checkout/blah.png',
         alt: 'x capability in connection_name',
         zoomable: true,
         class: 'my-32 shadow'
     %>
2. Ensure y is on x platform.

### Error message 2
Solution:

--------------------------------------------------------------------------------------------------------------------------------------
## Next steps (if applicable)
If there are topics that _build_ on top of these instructions or there are next steps, link to those topics. Make sure to mention the relevance of those topics to this current task or vice versa.

--------------------------------------------------------------------------------------------------------------------------------------------------------
## See also (if applicable)
Link topics that are related to the current topic. Let the reader know why this link is relevant to the current topic.
